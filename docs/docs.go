// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/campaigns": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint retrieves all campaign.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Retrieve all campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key for authentication",
                        "name": "x-api-key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/db.Campaign"
                        }
                    },
                    "500": {
                        "description": "Error retrieving Campaign",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Create Campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key for authentication",
                        "name": "x-api-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "campaign information",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign created successfully",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or data",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create campaign",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/register": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint retrieves All campaignUser.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RegisterCampaign"
                ],
                "summary": "Retrieve All campaign user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key for authentication",
                        "name": "x-api-key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CampaignUser retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/db.CampaignUser"
                        }
                    },
                    "500": {
                        "description": "Error retrieving CampaignUser",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RegisterCampaign"
                ],
                "summary": "Register Campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key for authentication",
                        "name": "x-api-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "campaign information",
                        "name": "registerInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CampaignRegistrationInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign registered successfully",
                        "schema": {
                            "$ref": "#/definitions/db.Voucher"
                        }
                    },
                    "400": {
                        "description": "Invalid input or data",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create campaign",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/register/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint retrieves a campaignUser by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RegisterCampaign"
                ],
                "summary": "Retrieve a campaign User by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key for authentication",
                        "name": "x-api-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CampaignUser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CampaignUser retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/db.CampaignUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input or ID format",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    },
                    "500": {
                        "description": "Error retrieving CampaignUser",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint retrieves a campaign by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Retrieve a campaign by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key for authentication",
                        "name": "x-api-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/db.Campaign"
                        }
                    },
                    "400": {
                        "description": "Invalid input or ID format",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    },
                    "500": {
                        "description": "Error retrieving Campaign",
                        "schema": {
                            "$ref": "#/definitions/util.EmptyResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Campaign": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "maxParticipants": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.CampaignUser": {
            "type": "object",
            "properties": {
                "campaign": {
                    "$ref": "#/definitions/db.Campaign"
                },
                "campaignID": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "registrationMethod": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subscriptionType": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.Voucher": {
            "type": "object",
            "properties": {
                "codePromotion": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expiryDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "types.CampaignRegistrationInfo": {
            "type": "object"
        },
        "types.CampaignRequest": {
            "type": "object"
        },
        "util.EmptyResponse": {
            "type": "object"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8089",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Service API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
